- move CameraForMapping in mapper
- cv::Mat pointer in image.h
- synchronize better threads
- better class distribution
- check well TODO (camera.cpp)
- multiscale searching
- regions separate
- TODO remove (dtam.cpp)

- return on rotational invariance
      updateRotationalInvariantGradients in dtam.cpp
      updateRotationalInvariantGradients in mapper.cpp
      float cost = getCostNew in epline.cpp (to rob)

- return on frame selection for initialization (large baseline/score ?)
- return on homography/fundamentalmat on initialization

- consider curvature

- invdepth or depth?

- consider linear interpolation instead of nn

- implement tracking as dso, but try to choose better coarser resolutions later

- sample also wrt 2nd derivative

- add magnitude of d_right - d_left

- return real variance TODO (camera.h)

- regions projected candidates -> vector projected candidates ?
